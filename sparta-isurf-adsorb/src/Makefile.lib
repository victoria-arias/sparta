# SPARTA static library multiple-machine Makefile

SHELL = /bin/sh

# Definitions

ROOT =	sparta
EXE =	lib$(ROOT)_$@.a

SRC =	balance_grid.cpp collide.cpp collide_vss.cpp comm.cpp compute.cpp compute_boundary.cpp compute_grid.cpp compute_ke_particle.cpp compute_property_grid.cpp compute_reduce.cpp compute_sonine_grid.cpp compute_surf.cpp compute_temp.cpp create_box.cpp create_grid.cpp create_particles.cpp cut2d.cpp cut3d.cpp domain.cpp dump.cpp dump_grid.cpp dump_image.cpp dump_particle.cpp dump_surf.cpp error.cpp finish.cpp fix.cpp fix_ave_grid.cpp fix_ave_surf.cpp fix_ave_time.cpp fix_balance.cpp fix_grid_check.cpp fix_inflow.cpp fix_print.cpp geometry.cpp grid.cpp grid_comm.cpp grid_id.cpp grid_surf.cpp image.cpp input.cpp irregular.cpp library.cpp  math_extra.cpp memory.cpp mixture.cpp modify.cpp output.cpp particle.cpp random_mars.cpp random_park.cpp rcb.cpp react.cpp react_qk.cpp react_tce.cpp read_grid.cpp read_surf.cpp region.cpp region_block.cpp region_cylinder.cpp region_intersect.cpp region_plane.cpp region_sphere.cpp region_union.cpp run.cpp sparta.cpp stats.cpp surf.cpp surf_collide.cpp surf_collide_diffuse.cpp surf_collide_specular.cpp timer.cpp universe.cpp update.cpp variable.cpp write_grid.cpp write_restart.cpp 

INC =	balance_grid.h collide.h collide_vss.h comm.h compute.h compute_boundary.h compute_grid.h compute_ke_particle.h compute_property_grid.h compute_reduce.h compute_sonine_grid.h compute_surf.h compute_temp.h create_box.h create_grid.h create_particles.h cut2d.h cut3d.h domain.h dump.h dump_grid.h dump_image.h dump_particle.h dump_surf.h error.h finish.h fix.h fix_ave_grid.h fix_ave_surf.h fix_ave_time.h fix_balance.h fix_grid_check.h fix_inflow.h fix_print.h geometry.h grid.h image.h input.h irregular.h library.h math_const.h math_extra.h memory.h mixture.h modify.h my_page.h my_vec.h output.h particle.h pointers.h random_mars.h random_park.h rcb.h react.h react_qk.h react_tce.h read_grid.h read_surf.h region.h region_block.h region_cylinder.h region_intersect.h region_plane.h region_sphere.h region_union.h run.h sparta.h spatype.h spawindows.h stats.h style_collide.h style_command.h style_compute.h style_dump.h style_fix.h style_react.h style_region.h style_surf_collide.h surf.h surf_collide.h surf_collide_diffuse.h surf_collide_specular.h timer.h universe.h update.h variable.h version.h write_grid.h write_restart.h 

OBJ =	$(SRC:.cpp=.o)

# Targets

help:
	@echo 'Type "make target" where target is one of:'
	@echo ''
	@files="`ls MAKE/Makefile.*`"; \
	for file in $$files; do head -1 $$file; done

.DEFAULT:
	@test -f MAKE/Makefile.$@
	@if [ ! -d Obj_$@ ]; then mkdir Obj_$@; fi
	@cp -p $(SRC) $(INC) Obj_$@
	@cp MAKE/Makefile.$@ Obj_$@/Makefile
	@cd Obj_$@; \
	$(MAKE) $(MFLAGS) "OBJ = $(OBJ)" "INC = $(INC)"  "SHFLAGS =" \
          "EXE = ../$(EXE)" lib
	@if [ -d Obj_$@ ]; then cd Obj_$@; rm -f $(SRC) $(INC) Makefile*; fi
